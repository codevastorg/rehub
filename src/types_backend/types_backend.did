service: () -> {
    addMilestone: (record {id:text; durationInDays:nat64; description:text; tokenReward:nat64}) -> (variant {Ok:record {id:text; durationInDays:nat64; description:text; tokenReward:nat64}; Err:variant {InvalidPayload:text; NotFound:text}});
    addUser: (record {id:text; sobrietyDate:nat64; name:text; tokens:nat64; claimedMilestones:vec text; roles:vec text}) -> (variant {Ok:record {id:text; sobrietyDate:nat64; name:text; tokens:nat64; claimedMilestones:vec text; roles:vec text}; Err:variant {InvalidPayload:text; NotFound:text}});
    checkAndRewardMilestones: (text) -> (variant {Ok:vec text; Err:variant {InvalidPayload:text; NotFound:text}});
    getMilestone: (text) -> (variant {Ok:record {id:text; durationInDays:nat64; description:text; tokenReward:nat64}; Err:variant {InvalidPayload:text; NotFound:text}}) query;
    getUser: (text) -> (variant {Ok:record {id:text; sobrietyDate:nat64; name:text; tokens:nat64; claimedMilestones:vec text; roles:vec text}; Err:variant {InvalidPayload:text; NotFound:text}}) query;
    mintTokens: (text, nat64) -> (variant {Ok:text; Err:variant {InvalidPayload:text; NotFound:text}});
    redeemReward: (text, text) -> (variant {Ok:text; Err:variant {InvalidPayload:text; NotFound:text}});
    transferTokens: (text, text, nat64) -> (variant {Ok:text; Err:variant {InvalidPayload:text; NotFound:text}});
}
